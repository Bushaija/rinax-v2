-- Diagnostic queries to understand execution activities and mappings

-- 1. Count all execution activities by category
SELECT 
  sac.code AS category_code,
  sac.sub_category_code,
  COUNT(*) AS activity_count,
  COUNT(*) FILTER (WHERE da.is_total_row = true) AS total_rows,
  COUNT(*) FILTER (WHERE da.is_total_row = false) AS non_total_rows
FROM dynamic_activities da
JOIN schema_activity_categories sac ON da.category_id = sac.id
WHERE da.module_type = 'execution'
GROUP BY sac.code, sac.sub_category_code
ORDER BY sac.code;

-- 2. Show all B-category execution activities (should map to GOODS_SERVICES as fallback)
-- B-category codes follow pattern: HIV_EXEC_B, HIV_EXEC_B-01, MAL_EXEC_B-02, etc.
SELECT 
  da.id,
  da.name,
  da.project_type,
  da.facility_type,
  sac.code AS category_code,
  da.is_total_row,
  da.activity_type
FROM dynamic_activities da
JOIN schema_activity_categories sac ON da.category_id = sac.id
WHERE 
  da.module_type = 'execution'
  AND (sac.code LIKE '%_B-%' OR sac.code LIKE '%_B')
  AND da.is_total_row = false
ORDER BY da.project_type, da.name
LIMIT 20;

-- 3. Count all execution event mappings by event code
SELECT 
  e.code AS event_code,
  COUNT(*) AS mapping_count,
  COUNT(*) FILTER (WHERE cem.metadata->>'fallbackMapping' = 'true') AS fallback_count,
  COUNT(*) FILTER (WHERE cem.metadata->>'autoGenerated' = 'true') AS auto_generated_count
FROM configurable_event_mappings cem
JOIN events e ON cem.event_id = e.id
JOIN dynamic_activities da ON cem.activity_id = da.id
WHERE 
  da.module_type = 'execution'
  AND cem.is_active = true
GROUP BY e.code
ORDER BY e.code;

-- 4. Show sample of execution activities with their mappings
SELECT 
  da.id,
  da.name,
  da.project_type,
  sac.code AS category_code,
  e.code AS event_code,
  cem.metadata->>'fallbackMapping' AS is_fallback
FROM dynamic_activities da
JOIN schema_activity_categories sac ON da.category_id = sac.id
LEFT JOIN configurable_event_mappings cem ON da.id = cem.activity_id AND cem.is_active = true
LEFT JOIN events e ON cem.event_id = e.id
WHERE 
  da.module_type = 'execution'
  AND da.is_total_row = false
ORDER BY da.project_type, da.name
LIMIT 30;

-- 5. Check if GOODS_SERVICES event exists
SELECT id, code, description 
FROM events 
WHERE code = 'GOODS_SERVICES';

-- 6. Count unmapped execution activities
SELECT 
  COUNT(*) AS unmapped_activities,
  COUNT(*) FILTER (WHERE sac.code LIKE '%_B-%' OR sac.code LIKE '%_B') AS unmapped_b_category
FROM dynamic_activities da
JOIN schema_activity_categories sac ON da.category_id = sac.id
LEFT JOIN configurable_event_mappings cem ON da.id = cem.activity_id AND cem.is_active = true
WHERE 
  da.module_type = 'execution'
  AND da.is_total_row = false
  AND cem.id IS NULL;
